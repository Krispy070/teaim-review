name: e2e
on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      PORT: 5000
      DISABLE_FASTAPI: "1"
      EMBED_WORKER: "0"
      SUPABASE_JWT_SECRET: "dev-secret-for-ci"
      OPENAI_API_KEY: "sk-test-not-used"
      DATABASE_URL: "postgresql://test:test@localhost:5432/testdb"
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run database migrations
        run: npm run db:push -- --force

      - name: Start server
        run: |
          nohup npm start > server.log 2>&1 &
          echo "Server started"
          sleep 8
          curl -sf http://localhost:5000/health || (echo "Server failed to start"; cat server.log; exit 1)

      - name: Setup Playwright
        run: |
          npx playwright install --with-deps

      - name: Run E2E tests
        env:
          BASE_URL: http://localhost:5000
        run: npx playwright test

      - name: Upload server logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: server.log

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: test-results/
          if-no-files-found: ignore
